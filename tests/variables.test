./test_main.sh
<<<
int a = 1, b = 2, c = 3, d = 0;
return a+b+c+d;
>>>
>>>2
>>>= 6

./test_main.sh
<<<
if (true)
{
  int a = 7;
  return a;
}
else
{
  int a = 1;
  return a;
}
>>>
>>>2
>>>= 7

./test_main.sh
<<<
// Test shadowing: outer variable should not change due to changing the inner
// one.
int a = 0;
if (true)
{
	int a;
	a = 3;
}
return a;
>>>= 0

./test_main.sh
<<<
// Test scopechecking: should fail since we have two vardefs in the same scope
// TODO: Implement #line so that we don't have to rely on guessing line numbers...
int a;
int a;
return 0;
>>>2
m3: temp_test.m (line 9, column 5..6): Redeclaration at same depth.
>>>= 1

./test.sh -
<<<
// Test definitions of global variables
import lib::gmp;
module temp_test;
mpz tmp1, tmp2, acc, den, num;
int main(int argc, [[const char]] argv) {
	return 0;
}
>>>
>>>2
>>>= 0

./test.sh -
<<<
import lib::gmp;
module temp_test;
mpz tmp1, tmp2, acc, den, num;
int main(int argc, [[const char]] argv) {
	return tmp1.size; // Just some field
}
>>>
>>>2
>>>= 0
